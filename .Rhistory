summarise( series = sum(value.x * value.y)/(sqrt(sum(value.x^2)) * sqrt(sum(value.y^2))) ) %>%
select(president = president.x, word, series)
series_df <- series_df %>%
left_join(pres_df %>% select(president, date, party), by = c("president" = "president")) %>%
arrange(date)
series_df
words <- c("terrorist")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = party)) + geom_line() + geom_point()
ggplotly(p)
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
series_df <- word_df %>% pivot_longer(3:7) %>%
left_join(word_df %>% dplyr::filter(president == "George Washington") %>% pivot_longer(3:7),
by = c("word" = "word", "name" = "name")) %>%
group_by(president.x, word) %>%
summarise( series = sum(value.x * value.y)/(sqrt(sum(value.x^2)) * sqrt(sum(value.y^2))) ) %>%
select(president = president.x, word, series)
series_df[1:1000, ]
pres_df <- readRDS('../datasets/US-president.Rds')
series_df <- series_df %>%
left_join(pres_df %>% select(president, date, party), by = c("president" = "president")) %>%
arrange(date)
series_df[1:1000, ]
words <- c("administration")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
words <- c("finance")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
words <- c("nuclear")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
words <- c("war", "freedom")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
series_df
words <- c("war", "freedom")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point()
ggplotly(p)
unique(series_df$word)
words <- c("war", "bomb")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point()
ggplotly(p)
words <- c("space")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point()
ggplotly(p)
words <- c("space", "computer")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point()
ggplotly(p)
words <- c("government", "computer")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point()
ggplotly(p)
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
words <- c("government")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
words <- c("laden")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point(aes(color = party))
ggplotly(p)
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point()
ggplotly(p)
"laden" %in% unique(word_df$word)
"osama" %in% unique(word_df$word)
"iran" %in% unique(word_df$word)
words <- c("vietnam")
p <- ggplot(series_df %>% filter(word %in% words), aes(x = date, y = series, color = word)) +
geom_line() + geom_point()
ggplotly(p)
library(stringr)
library(tidytext)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
speeches <- list.files('../datasets/presidential-speeches/')
head(speeches)
setwd("D:/Dataprojects/Natural_Language_Processing_Soumendu_da/Reports")
speech_df <- readRDS('../datasets/US-president-speech.Rds')
rm(speeches)
speech_df
install.packages("textstem")
x <- c('the dirtier dog has eaten the pies',
'that shameful pooch is tricky and sneaky',
"He opened and then reopened the food bag",
'There are skies of blue and red roses too!',
NA,
"The doggies, well they aren't joyfully running.",
"The daddies are coming over...",
"This is 34.546 above")
textstem::stem_strings(x)
x <- c('the dirtier dog has eaten the pies',
'that shameful pooch is tricky and sneaky',
"He opened and then reopened the food bag",
'There are skies of blue and red roses too!',
'There were skies of blue and red roses too!',
"The doggies, well they aren't joyfully running.",
"The daddies are coming over...",
"This is 34.546 above")
textstem::stem_strings(x)
x <- c('the dirtier dog has eaten the pies',
'that shameful pooch is tricky and sneaky',
"He opened and then reopened the food bag",
'There are skies of blue and red roses too!',
'There was skies of blue and red roses too!',
"The doggies, well they aren't joyfully running.",
"The daddies are coming over...",
"This is 34.546 above")
textstem::stem_strings(x)
textstem::lemmatize_strings(x)
speech_df$text[1:2]
textstem::lemmatize_strings(speech_df$text[1])
textstem::stem_strings(speech_df$text[1])
textstem::lemmatize_strings(speech_df$text[1])
textstem::lemmatize_strings(speech_df$text[2])
?textstem::lemmatize_strings
textstem::lemmatize_strings(speech_df$text[2], dictionary = "hunspell")
textstem::lemmatize_strings(speech_df$text[2], dictionary = hunspell)
rm(x)
lemma_text <- textstem::lemmatize_strings(speech_df$text)
speech_df$text <- lemma_text
speech_df
term_df <- speech_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(president, word, sort = TRUE)
term_df
rm(lemma_text)
a <- unique(term_df$word)
head(a)
head(sort(a))
speech_df <- readRDS('../datasets/US-president-speech.Rds')
speech_df
tail(speech_df)
View(tail(speech_df))
textstem::lemmatize_strings("hundred miles")
textstem::lemmatize_strings("hundreds miles", "100 persons")
textstem::lemmatize_strings(c("hundreds miles", "100 persons"))
speech_df <- speech_df %>% mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") )
term_df <- speech_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
head(sort(unique(term_df$word)))
lemma_text <- textstem::lemmatize_strings(speech_df$text)   # perform lemmatization
speech_df$text <- lemma_text
term_df <- speech_df %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
head(sort(unique(term_df$word)))
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
rm(lemma_text)
head(sort(unique(term_df$word)))
rm(a)
term_df
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
pres_df
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word"))
term_df
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word")) %>%
replace_na(list(n = 0)) %>%
left_join(pres_df, by = "president")
term_df
sum(is.na(term_df$n))
check_words <- c("privateer", "space", "terrorism", "war")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = n, color = word)) +
geom_point(aes(y = n, color = party)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = n, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
dim(term_df)
term_df
term_df <- term_df %>%
left_join(term_df %>% group_by(word) %>% summarise(total = sum(n)), by = "word") %>%
mutate(tf = n / total) %>%
select(president, word, tf)
term_df
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word")) %>%
replace_na(list(n = 0)) %>%
left_join(pres_df, by = "president")
dim(term_df)
check_words <- c("privateer", "space", "terrorism", "war")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = n, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
dim(term_df)
term_df[1:100, ]
term_df <- term_df %>%
left_join(term_df %>% group_by(word) %>% summarise(total = sum(n)), by = "word") %>%
mutate(tf = n / total) %>%
select(president, word, tf)
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word")) %>%
replace_na(list(tf = 0)) %>%
left_join(pres_df, by = "president")
dim(term_df)
term_df
check_words <- c("privateer", "space", "terrorism", "war")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
check_words <- c("privateer", "space", "terrorism", "war", "freedom")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
check_words <- c("privateer", "space", "terrorism", "war", "slave")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = log(tf), color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = log(tf + 1e-10), color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
check_words <- c("privateer", "space", "terrorism", "peace", "slave")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
check_words <- c("privateer", "space", "terrorism", "slave", "independence")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = word)) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = party)) +
facet_grid(~ word) +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 15))
ggplotly(p)
check_words <- c("privateer", "space", "terrorism", "slave")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = party)) +
facet_grid(~ word) +
theme_bw()
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf, color = party)) +
facet_wrap(~ word) +
theme_bw()
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf)) +
geom_point(aes(y = tf, color = party))
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf)) +
geom_point(aes(y = tf, color = party)) +
facet_wrap(~ word) +
theme_bw()
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf)) +
geom_point(aes(y = tf, color = party)) +
facet_wrap(~ word, scales = "free") +
theme_bw() +
scale_x_date(breaks = scales::pretty_breaks(n = 10))
ggplotly(p)
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf)) +
geom_point(aes(y = tf, color = party)) +
facet_wrap(~ word, scales = "free_y") +
theme_bw()
ggplotly(p)
check_words <- c("privateer", "space", "terrorism", "slave", "whiskey")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf)) +
geom_point(aes(y = tf, color = party)) +
facet_wrap(~ word, scales = "free_y") +
theme_bw()
ggplotly(p)
a <- unique(term_df$word)
"whisk" %in% a
"money" %in% a
check_words <- c("privateer", "space", "terrorism", "slave", "money")
p <- ggplot(term_df %>% dplyr::filter(word %in% check_words), aes(x = date)) +
geom_line(aes(y = tf)) +
geom_point(aes(y = tf, color = party)) +
facet_wrap(~ word, scales = "free_y") +
theme_bw()
ggplotly(p)
"treat" %in% a
"treaty" %in% a
"bighorn" %in% a
"crash" %in% a
"recession" %in% a
term_df
term_mat <- term_df %>% cast_sparse(word, date, tf)
dim(term_mat)
colnames(term_mat)
which(term_df$date == NA)
which(is.na(term_df$date))
term_df[which(is.na(term_df$date)), ]
pres_df
pres_df
View(pres_df)
pres_df$president[pres_df$president == "William Howard Taft"] = "William Taft"
saveRDS(pres_df, file = "../datasets/US-president.Rds")
speech_df <- readRDS('../datasets/US-president-speech.Rds')
speech_df[1:100, ]
lemma_text <- textstem::lemmatize_strings(speech_df$text)   # perform lemmatization
speech_df$text <- lemma_text
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
dim(term_df)
term_df[1:100, ]
term_df <- term_df %>%
left_join(term_df %>% group_by(word) %>% summarise(total = sum(n)), by = "word") %>%
mutate(tf = n / total) %>%
select(president, word, tf)
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word")) %>%
replace_na(list(tf = 0)) %>%
left_join(pres_df, by = "president")
dim(term_df)
term_mat <- term_df %>% cast_sparse(word, date, tf)
dim(term_mat)
rownames(term_mat)
colnames(term_mat)
term_df[which(is.na(term_df$date)), ]
View(pres_df)
pres_df$president[pres_df$president == "William Henry Harrison"] = "William Harrison"
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
term_df <- term_df %>%
left_join(term_df %>% group_by(word) %>% summarise(total = sum(n)), by = "word") %>%
mutate(tf = n / total) %>%
select(president, word, tf)
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word")) %>%
replace_na(list(tf = 0)) %>%
left_join(pres_df, by = "president")
term_mat <- term_df %>% cast_sparse(word, date, tf)
dim(term_mat)
term_df[which(is.na(term_df$date)), ]
pres_df$president[pres_df$president == "William Henry Harrison"] = "William Harrison"
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
term_df <- term_df %>%
left_join(term_df %>% group_by(word) %>% summarise(total = sum(n)), by = "word") %>%
mutate(tf = n / total) %>%
select(president, word, tf)
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word")) %>%
replace_na(list(tf = 0)) %>%
left_join(pres_df, by = "president")
term_mat <- term_df %>% cast_sparse(word, date, tf)
dim(term_mat)
rownames(term_mat)
colnames(term_mat)
saveRDS(pres_df, file = "../datasets/US-president.Rds")
term_mat
colnames(term_mat)
sort(colnames(term_mat))
sort(colnames(term_mat))
# order the columns in order of time
term_mat <- term_mat[, sort(colnames(term_mat))]
a <- matrix(1:15, nrow = 5, ncol = 3)
a
apply(a, 2, cummean)
apply(a, 1, cummean)
(1 + 6 + 11)/3
(1 + 6)/2
library(stringr)
library(tidytext)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
speech_df <- readRDS('../datasets/US-president-speech.Rds')
setwd("D:/Dataprojects/Natural_Language_Processing_Soumendu_da/Reports")
speech_df <- readRDS('../datasets/US-president-speech.Rds')
lemma_text <- textstem::lemmatize_strings(speech_df$text)   # perform lemmatization
speech_df$text <- lemma_text
term_df <- speech_df %>%
mutate(text = str_replace_all(text, pattern = "[^a-zA-Z\\s]", replacement = " ") ) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words, by = "word") %>%
count(president, word, sort = TRUE)
dim(term_df)
term_df[1:100, ]
term_df <- term_df %>%
left_join(term_df %>% group_by(word) %>% summarise(total = sum(n)), by = "word") %>%
mutate(tf = n / total) %>%
select(president, word, tf)
all_words <- unique(term_df$word)
pres_df <- readRDS('../datasets/US-president.Rds')
term_df <- term_df %>%
full_join(expand.grid(president = pres_df$president, word = all_words), by = c("president", "word")) %>%
replace_na(list(tf = 0)) %>%
left_join(pres_df, by = "president")
dim(term_df)
term_mat <- term_df %>% cast_sparse(word, date, tf)
# order the columns in order of time
term_mat <- term_mat[, sort(colnames(term_mat))]
rm(lemma_text)
?cummean
ms_mat <- apply(term_mat, 1, cummean)
dim(ms_mat)
dim(term_mat)
colnames(term_mat)
ms_mat <- t( apply(term_mat, 1, cummean) - apply(term_mat[, rev(colnames(term_mat))], 1, cummean))
dim(ms_mat)
colnames(ms_mat)
rownames(ms_mat)
colnames(ms_mat) <- colnames(term_mat)
ms_mat["inform", ]
ms_mat <- t( apply(term_mat, 1, cummean) - apply(term_mat[, rev(colnames(term_mat))], 1, cummean))
colnames(ms_mat) <- colnames(term_mat)
ms_mat["inform", ]
plot(ms_mat["inform", ])
plot(ms_mat["information", ])
plot(ms_mat["people", ])
plot(ms_mat["government", ])
plot(ms_mat["money", ])
plot(ms_mat["space", ])
ms_mat <- t( apply(term_mat[, -1], 1, cummean) - apply(term_mat[, rev(colnames(term_mat))[-1] ], 1, cummean))
dim(ms_mat)
plot(ms_mat["space", ])
ms_mat <- t( apply(term_mat[, -1], 1, cummean)) # - apply(term_mat[, rev(colnames(term_mat))[-1] ], 1, cummean))
dim(ms_mat)
ms_mat <- t( apply(term_mat, 1, cummean)) # - apply(term_mat[, rev(colnames(term_mat))[-1] ], 1, cummean))
colnames(ms_mat) <- colnames(term_mat)
dim(ms_mat)
plot(ms_mat["space", ])
plot(ms_mat["inform", ])
